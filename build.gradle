buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

project.ext {
    major = "0"
    minor = "0"
}


version = "1.7.2-${project.ext.major}.${project.minor}"
group= "net.quetzi.bluepower" 
archivesBaseName = "BluePower"


if (System.getenv().BUILD_NUMBER != null){
    version += ".${System.getenv().BUILD_NUMBER}"
}else{
    version += " - err"
}


def getDependency(url, output) {
    def f = new File(output)
    if(!f.exists()){
        ant.get(src: url, dest: output)
    }
}

dependencies {
    def f = new File('dep')
    if(!f.isDirectory()){
        f.delete()
    }
    if(!f.exists()){
        f.mkdir()
    }
    println("  Downloading dependencies!")
    getDependency("http://files.minecraftforge.net/maven/codechicken/CodeChickenLib/1.7.2-1.1.1.81/CodeChickenLib-1.7.2-1.1.1.81-dev.jar",   "dep/ccl.jar")
    getDependency("http://files.minecraftforge.net/maven/codechicken/ForgeMultipart/1.7.2-1.1.0.282/ForgeMultipart-1.7.2-1.1.0.282-dev.jar", "dep/fmp.jar")
    getDependency("http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.7.2/CodeChickenCore-1.7.2-1.0.0-dev.jar",                    "dep/ccc.jar")
    getDependency("http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.7.2/NotEnoughItems-1.7.2-1.0.1-dev.jar",                     "dep/nei.jar")
    getDependency("http://ci.cil.li/job/OpenComputers-MC1.7/190/artifact/build/libs/OpenComputers-MC1.7.2-1.3.0.190-beta.1-deobf.jar",       "dep/oc.jar")
    println("  Adding dependencies!")
    compile files("dep/ccl.jar", "dep/fmp.jar", "dep/nei.jar", "dep/ccc.jar", "dep/oc.jar")
    println("  Finished adding dependencies!")
}

minecraft {
    version = "1.7.2-10.12.2.1121"
    assetDir = "eclipse/assets"
    
	// replacing stuff in the source
	replace '@MAJOR@', project.major
	replace '@MINOR@', project.minor
	replace '@MC_VERSION@', version
    if(System.getenv("BUILD_NUMBER") != null){
	    replace '@BUILD_NUMBER@', System.getenv("BUILD_NUMBER")
    }else{
        replace '@BUILD_NUMBER@', 0
    }

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '*.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
